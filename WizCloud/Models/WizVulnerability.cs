using System;
using System.Collections.Generic;

namespace WizCloud;

/// <summary>
/// Represents a vulnerability finding returned by the Wiz API.
/// </summary>
public class WizVulnerability {
    /// <summary>
    /// Gets or sets the unique identifier of the vulnerability.
    /// </summary>
    public string Id { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the CVE identifier.
    /// </summary>
    public string Cve { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the CVSS information.
    /// </summary>
    public WizVulnerabilityCvss? Cvss { get; set; }

    /// <summary>
    /// Gets or sets the published date of the vulnerability.
    /// </summary>
    public DateTime? PublishedDate { get; set; }

    /// <summary>
    /// Gets or sets the last modified date of the vulnerability.
    /// </summary>
    public DateTime? ModifiedDate { get; set; }

    /// <summary>
    /// Gets or sets the description of the vulnerability.
    /// </summary>
    public string? Description { get; set; }

    /// <summary>
    /// Gets or sets the list of affected packages.
    /// </summary>
    public List<WizVulnerabilityPackage> AffectedPackages { get; set; } = new List<WizVulnerabilityPackage>();

    /// <summary>
    /// Gets or sets the list of affected resources.
    /// </summary>
    public List<WizVulnerabilityResource> Resources { get; set; } = new List<WizVulnerabilityResource>();

    /// <summary>
    /// Gets or sets a value indicating whether an exploit is available.
    /// </summary>
    public bool? ExploitAvailable { get; set; }

    /// <summary>
    /// Gets or sets a value indicating whether an exploit exists in the wild.
    /// </summary>
    public bool? ExploitInTheWild { get; set; }

}

